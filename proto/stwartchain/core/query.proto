syntax = "proto3";

package stwartchain.core;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "stwartchain/core/params.proto";
import "stwartchain/core/stats.proto";
import "stwartchain/core/daily_stats.proto";

option go_package = "gitlab.stalwart.tech/ijio/main/backend/stwart-chain/x/core/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/stwart/core/params";
  
  }
  
  // Queries a list of Stats items.
  rpc Stats    (QueryGetStatsRequest) returns (QueryGetStatsResponse) {
    option (google.api.http).get = "/stwart/core/stats/{date}";
  
  }
  rpc StatsAll (QueryAllStatsRequest) returns (QueryAllStatsResponse) {
    option (google.api.http).get = "/stwart/core/stats";
  
  }
  
  // Queries a list of ModulesAddresses items.
  rpc ModulesAddresses (QueryModulesAddressesRequest) returns (QueryModulesAddressesResponse) {
    option (google.api.http).get = "/backend/stwart-chain/core/modules_addresses";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetStatsRequest {
  string date = 1;
}

message QueryGetStatsResponse {
  Stats stats = 1 [(gogoproto.nullable) = false];
}

message QueryAllStatsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllStatsResponse {
  repeated Stats                                  stats      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetStatsByDateRequest {
  string                                start_date = 1;
  string                                end_date   = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryModulesAddressesRequest {}

message QueryModulesAddressesResponse {
  repeated string address = 1;
}

