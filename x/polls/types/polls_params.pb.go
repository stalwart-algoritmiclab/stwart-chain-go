// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stwartchain/polls/polls_params.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PollsParams struct {
	ProposerDeposit []types.Coin `protobuf:"bytes,1,rep,name=proposerDeposit,proto3" json:"proposerDeposit"`
	MinDaysDuration string       `protobuf:"bytes,2,opt,name=minDaysDuration,proto3" json:"minDaysDuration,omitempty"`
	MaxDaysDuration string       `protobuf:"bytes,3,opt,name=maxDaysDuration,proto3" json:"maxDaysDuration,omitempty"`
	MaxDaysPending  string       `protobuf:"bytes,4,opt,name=maxDaysPending,proto3" json:"maxDaysPending,omitempty"`
	BurnVeto        bool         `protobuf:"varint,5,opt,name=burnVeto,proto3" json:"burnVeto,omitempty"`
	Creator         string       `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *PollsParams) Reset()         { *m = PollsParams{} }
func (m *PollsParams) String() string { return proto.CompactTextString(m) }
func (*PollsParams) ProtoMessage()    {}
func (*PollsParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_26c5e9175970accc, []int{0}
}
func (m *PollsParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PollsParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PollsParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PollsParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollsParams.Merge(m, src)
}
func (m *PollsParams) XXX_Size() int {
	return m.Size()
}
func (m *PollsParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PollsParams.DiscardUnknown(m)
}

var xxx_messageInfo_PollsParams proto.InternalMessageInfo

func (m *PollsParams) GetProposerDeposit() []types.Coin {
	if m != nil {
		return m.ProposerDeposit
	}
	return nil
}

func (m *PollsParams) GetMinDaysDuration() string {
	if m != nil {
		return m.MinDaysDuration
	}
	return ""
}

func (m *PollsParams) GetMaxDaysDuration() string {
	if m != nil {
		return m.MaxDaysDuration
	}
	return ""
}

func (m *PollsParams) GetMaxDaysPending() string {
	if m != nil {
		return m.MaxDaysPending
	}
	return ""
}

func (m *PollsParams) GetBurnVeto() bool {
	if m != nil {
		return m.BurnVeto
	}
	return false
}

func (m *PollsParams) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*PollsParams)(nil), "stwartchain.polls.PollsParams")
}

func init() {
	proto.RegisterFile("stwartchain/polls/polls_params.proto", fileDescriptor_26c5e9175970accc)
}

var fileDescriptor_26c5e9175970accc = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x45, 0x93, 0xb6, 0x94, 0x92, 0x4a, 0x54, 0x44, 0x0c, 0xa1, 0x83, 0xa9, 0x10, 0x42, 0x59,
	0xb0, 0x55, 0xf8, 0x02, 0x4a, 0x17, 0xb6, 0xaa, 0x03, 0x03, 0x0c, 0xc8, 0x49, 0xad, 0xd4, 0x90,
	0xf8, 0x59, 0xb6, 0x0b, 0xed, 0x2f, 0x30, 0xf1, 0x59, 0x1d, 0x3b, 0x32, 0x21, 0xd4, 0xfe, 0x08,
	0xb2, 0x13, 0x10, 0xed, 0x62, 0xf9, 0xdd, 0x77, 0xee, 0x1d, 0xde, 0x0d, 0xce, 0xb5, 0x79, 0xa3,
	0xca, 0xa4, 0x53, 0xca, 0x05, 0x91, 0x90, 0xe7, 0xba, 0x7c, 0x9f, 0x24, 0x55, 0xb4, 0xd0, 0x58,
	0x2a, 0x30, 0x10, 0x1e, 0xfd, 0xa3, 0xb0, 0xdb, 0x77, 0x51, 0x0a, 0xba, 0x00, 0x4d, 0x12, 0xaa,
	0x19, 0x79, 0xed, 0x27, 0xcc, 0xd0, 0x3e, 0x49, 0xc1, 0xee, 0xad, 0xa5, 0x7b, 0x9c, 0x41, 0x06,
	0xee, 0x4b, 0xec, 0xaf, 0x54, 0xcf, 0xde, 0x6b, 0x41, 0x7b, 0x64, 0xfd, 0x23, 0x17, 0x1f, 0xde,
	0x05, 0x1d, 0xa9, 0x40, 0x82, 0x66, 0x6a, 0xc8, 0x24, 0x68, 0x6e, 0x22, 0xbf, 0x57, 0x8f, 0xdb,
	0x57, 0x27, 0xb8, 0xcc, 0xc7, 0x36, 0x1f, 0x57, 0xf9, 0xf8, 0x16, 0xb8, 0x18, 0x34, 0x96, 0x5f,
	0xa7, 0xde, 0x78, 0xd7, 0x17, 0xc6, 0x41, 0xa7, 0xe0, 0x62, 0x48, 0x17, 0x7a, 0x38, 0x53, 0xd4,
	0x70, 0x10, 0x51, 0xad, 0xe7, 0xc7, 0x07, 0xe3, 0x5d, 0xd9, 0x91, 0x74, 0xbe, 0x45, 0xd6, 0x2b,
	0x72, 0x5b, 0x0e, 0x2f, 0x82, 0xc3, 0x4a, 0x1a, 0x31, 0x31, 0xe1, 0x22, 0x8b, 0x1a, 0x0e, 0xdc,
	0x51, 0xc3, 0x6e, 0xd0, 0x4a, 0x66, 0x4a, 0xdc, 0x33, 0x03, 0xd1, 0x5e, 0xcf, 0x8f, 0x5b, 0xe3,
	0xbf, 0x39, 0x8c, 0x82, 0xfd, 0x54, 0x31, 0x6a, 0x40, 0x45, 0x4d, 0x67, 0xfe, 0x1d, 0x07, 0x8f,
	0xcb, 0x35, 0xf2, 0x57, 0x6b, 0xe4, 0x7f, 0xaf, 0x91, 0xff, 0xb1, 0x41, 0xde, 0x6a, 0x83, 0xbc,
	0xcf, 0x0d, 0xf2, 0x1e, 0x6e, 0x32, 0x6e, 0x72, 0x9a, 0x60, 0x6d, 0x68, 0x6e, 0x0f, 0x8f, 0x0d,
	0x4b, 0xa7, 0x84, 0x3f, 0x73, 0x20, 0x85, 0x2d, 0x2a, 0xa1, 0xe9, 0x0b, 0x13, 0x13, 0x52, 0xd6,
	0x72, 0x59, 0xb6, 0x37, 0xaf, 0xfa, 0x33, 0x0b, 0xc9, 0x74, 0xd2, 0x74, 0x07, 0xbf, 0xfe, 0x09,
	0x00, 0x00, 0xff, 0xff, 0xbe, 0x8a, 0xf0, 0x4c, 0xe1, 0x01, 0x00, 0x00,
}

func (m *PollsParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PollsParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PollsParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintPollsParams(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x32
	}
	if m.BurnVeto {
		i--
		if m.BurnVeto {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.MaxDaysPending) > 0 {
		i -= len(m.MaxDaysPending)
		copy(dAtA[i:], m.MaxDaysPending)
		i = encodeVarintPollsParams(dAtA, i, uint64(len(m.MaxDaysPending)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.MaxDaysDuration) > 0 {
		i -= len(m.MaxDaysDuration)
		copy(dAtA[i:], m.MaxDaysDuration)
		i = encodeVarintPollsParams(dAtA, i, uint64(len(m.MaxDaysDuration)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MinDaysDuration) > 0 {
		i -= len(m.MinDaysDuration)
		copy(dAtA[i:], m.MinDaysDuration)
		i = encodeVarintPollsParams(dAtA, i, uint64(len(m.MinDaysDuration)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ProposerDeposit) > 0 {
		for iNdEx := len(m.ProposerDeposit) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ProposerDeposit[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPollsParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintPollsParams(dAtA []byte, offset int, v uint64) int {
	offset -= sovPollsParams(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PollsParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ProposerDeposit) > 0 {
		for _, e := range m.ProposerDeposit {
			l = e.Size()
			n += 1 + l + sovPollsParams(uint64(l))
		}
	}
	l = len(m.MinDaysDuration)
	if l > 0 {
		n += 1 + l + sovPollsParams(uint64(l))
	}
	l = len(m.MaxDaysDuration)
	if l > 0 {
		n += 1 + l + sovPollsParams(uint64(l))
	}
	l = len(m.MaxDaysPending)
	if l > 0 {
		n += 1 + l + sovPollsParams(uint64(l))
	}
	if m.BurnVeto {
		n += 2
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovPollsParams(uint64(l))
	}
	return n
}

func sovPollsParams(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPollsParams(x uint64) (n int) {
	return sovPollsParams(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PollsParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPollsParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PollsParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PollsParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposerDeposit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPollsParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPollsParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPollsParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProposerDeposit = append(m.ProposerDeposit, types.Coin{})
			if err := m.ProposerDeposit[len(m.ProposerDeposit)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDaysDuration", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPollsParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPollsParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPollsParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinDaysDuration = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDaysDuration", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPollsParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPollsParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPollsParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MaxDaysDuration = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDaysPending", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPollsParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPollsParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPollsParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MaxDaysPending = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BurnVeto", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPollsParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BurnVeto = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPollsParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPollsParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPollsParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPollsParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPollsParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPollsParams(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPollsParams
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPollsParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPollsParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPollsParams
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPollsParams
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPollsParams
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPollsParams        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPollsParams          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPollsParams = fmt.Errorf("proto: unexpected end of group")
)
